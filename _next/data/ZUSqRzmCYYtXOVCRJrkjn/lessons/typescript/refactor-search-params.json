{"pageProps":{"post":{"attributes":{"description":"Brian quickly converts SearchParams.tsx"},"html":"<p>Let&#39;s go do SearchParams.tsx</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-comment\">// update React import, add Reach Router import</span>\n<span class=\"hljs-keyword\">import</span> { useState, useEffect, useContext } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Animal</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./APIResponsesTypes&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">ANIMALS</span>: <span class=\"hljs-title class_\">Animal</span>[] = [<span class=\"hljs-string\">&quot;bird&quot;</span>, <span class=\"hljs-string\">&quot;cat&quot;</span>, <span class=\"hljs-string\">&quot;dog&quot;</span>, <span class=\"hljs-string\">&quot;rabbit&quot;</span>, <span class=\"hljs-string\">&quot;reptile&quot;</span>];\n\n<span class=\"hljs-comment\">// replace function declaration</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">SearchParams</span> = (<span class=\"hljs-params\"></span>) =&gt; {\n  ‚Ä¶\n}\n\n<span class=\"hljs-comment\">// replace useState calls</span>\n<span class=\"hljs-keyword\">const</span> [animal, updateAnimal] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-string\">&quot;&quot;</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">Animal</span>);\n\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>\n  <span class=\"hljs-attr\">onSubmit</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const obj = {\n      animal: formData.get(&quot;animal&quot;)?.toString() ?? &quot;&quot;,\n      breed: formData.get(&quot;breed&quot;)?.toString() ?? &quot;&quot;,\n      location: formData.get(&quot;location&quot;)?.toString() ?? &quot;&quot;,\n    };\n    setRequestParams(obj);\n  }}\n&gt;\n [‚Ä¶]\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span></span>\n\n<span class=\"hljs-comment\">// add as to select for animal</span>\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span>\n  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;animal&quot;</span>\n  <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;animal&quot;</span>\n  <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> {\n    setAnimal(e.target.value as Animal);\n  }}\n  onBlur={(e) =&gt; {\n    setAnimal(e.target.value as Animal);\n  }}\n&gt;\n  [‚Ä¶]\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span></span>\n</code></pre>\n<ul>\n<li>We had to switch from <code>e.target</code> to <code>e.currentTarget</code> because I guess while target works it&#39;s not technically guaranteed to be on a submit event even though it always is ü§∑‚Äç‚ôÇÔ∏è</li>\n<li>Working with the DOM with TypeScript can get annoying because there&#39;s a lot of legacy pseudo types that we never had to care about. Technically <code>formData.get</code> gives us back a <code>FormDataEntryValue</code> type and not a string but when you use it like we were it implicitly called <code>toString</code>. Now we have to do it explictly.</li>\n<li>We need to type values as they come out of the DOM. There&#39;s no way for TypeScript to understand what goes into the DOM and what comes back out so we have to be explicit as it goes in and out.</li>\n</ul>\n","slug":"refactor-search-params","title":"Refactor Search Params","section":"TypeScript","icon":"pencil-ruler","filePath":"/home/runner/work/complete-intro-to-react-v8/complete-intro-to-react-v8/lessons/13-typescript/J-refactor-search-params.md","nextSlug":"/lessons/typescript/refactor-results","prevSlug":"/lessons/typescript/refactor-breed-list"}},"__N_SSG":true}