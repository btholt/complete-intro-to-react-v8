{"pageProps":{"post":{"attributes":{"description":"Brian quickly converts SearchParams.tsx"},"html":"<p>Let&#39;s go do SearchParams.tsx</p>\n<pre><code class=\"language-tsx\">// import Animal type\nimport { Animal } from &quot;./APIResponsesTypes&quot;;\n\nconst ANIMALS: Animal[] = [&quot;bird&quot;, &quot;cat&quot;, &quot;dog&quot;, &quot;rabbit&quot;, &quot;reptile&quot;];\n\n// replace useState calls\nconst [animal, updateAnimal] = useState(&quot;&quot; as Animal);\n\n&lt;form\n  onSubmit={(e) =&gt; {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const obj = {\n      animal: formData.get(&quot;animal&quot;)?.toString() ?? &quot;&quot;,\n      breed: formData.get(&quot;breed&quot;)?.toString() ?? &quot;&quot;,\n      location: formData.get(&quot;location&quot;)?.toString() ?? &quot;&quot;,\n    };\n    setRequestParams(obj);\n  }}\n&gt;\n [‚Ä¶]\n&lt;/form&gt;\n\n// add as to select for animal\n&lt;select\n  id=&quot;animal&quot;\n  name=&quot;animal&quot;\n  onChange={(e) =&gt; {\n    setAnimal(e.target.value as Animal);\n  }}\n  onBlur={(e) =&gt; {\n    setAnimal(e.target.value as Animal);\n  }}\n&gt;\n  [‚Ä¶]\n&lt;/select&gt;\n</code></pre>\n<ul>\n<li>We had to switch from <code>e.target</code> to <code>e.currentTarget</code> because I guess while target works it&#39;s not technically guaranteed to be on a submit event even though it always is ü§∑‚Äç‚ôÇÔ∏è</li>\n<li>Working with the DOM with TypeScript can get annoying because there&#39;s a lot of legacy pseudo types that we never had to care about. Technically <code>formData.get</code> gives us back a <code>FormDataEntryValue</code> type and not a string but when you use it like we were it implicitly called <code>toString</code>. Now we have to do it explictly.</li>\n<li>We need to type values as they come out of the DOM. There&#39;s no way for TypeScript to understand what goes into the DOM and what comes back out so we have to be explicit as it goes in and out.</li>\n</ul>\n","slug":"refactor-search-params","title":"Refactor Search Params","section":"TypeScript","icon":"pencil-ruler","filePath":"/home/runner/work/complete-intro-to-react-v8/complete-intro-to-react-v8/lessons/13-typescript/J-refactor-search-params.md","nextSlug":"/lessons/typescript/refactor-results","prevSlug":"/lessons/typescript/refactor-breed-list"}},"__N_SSG":true}