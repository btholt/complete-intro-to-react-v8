{"pageProps":{"post":{"attributes":{"description":"Brian quickly converts useBreedList.ts"},"html":"<p>Now let&#39;s go do useBreedList.ts.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">QueryStatus</span>, useQuery } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@tanstack/react-query&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Animal</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./APIResponsesTypes&quot;</span>;\n<span class=\"hljs-keyword\">import</span> fetchBreedList <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./fetchBreedList&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">useBreedList</span>(<span class=\"hljs-params\">animal: Animal</span>) {\n  <span class=\"hljs-keyword\">const</span> results = <span class=\"hljs-title function_\">useQuery</span>([<span class=\"hljs-string\">&quot;breeds&quot;</span>, animal], fetchBreedList);\n\n  <span class=\"hljs-keyword\">return</span> [results?.<span class=\"hljs-property\">data</span>?.<span class=\"hljs-property\">breeds</span> ?? [], results.<span class=\"hljs-property\">status</span>] <span class=\"hljs-keyword\">as</span> [\n    string[],\n    <span class=\"hljs-title class_\">QueryStatus</span>\n  ];\n}\n</code></pre>\n<ul>\n<li>We need to type the parameter as an Animal. If we&#39;re going to assert it&#39;s an animal we have to have that type follow it around.</li>\n<li>We need to use <code>as</code> here to tell TypeScript we explictly expect it to be a length 2 array with the first item being a string array (which could be empty) and the second item being a loading status. Otherwise TypeScript thinks it&#39;s a heterogenous array where any item could be any of those types.</li>\n</ul>\n","slug":"refactor-breed-list","title":"Refactor Breed List","section":"TypeScript","icon":"pencil-ruler","filePath":"/home/runner/work/complete-intro-to-react-v8/complete-intro-to-react-v8/lessons/13-typescript/I-refactor-breed-list.md","nextSlug":"/lessons/typescript/refactor-search-params","prevSlug":"/lessons/typescript/refactor-fetches"}},"__N_SSG":true}