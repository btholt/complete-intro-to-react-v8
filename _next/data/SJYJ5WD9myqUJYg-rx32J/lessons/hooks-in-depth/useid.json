{"pageProps":{"post":{"attributes":{"title":"useId","description":"useId allows you to generate consistent IDs across renders"},"html":"<h3 id=\"link-directly-to-stackblitz\"><a href=\"https://stackblitz.com/edit/ir5?view=both&amp;file=src/routes/UseId.jsx&amp;hideExplorer=1&amp;initialPath=/useId\">Link directly to StackBlitz</a></h3>\n<iframe src=\"https://stackblitz.com/edit/ir5?embed=1&view=both&file=src/routes/UseId.jsx&hideExplorer=1&initialPath=/useId\"></iframe>\n\n<p>A new hook for version 18 of React is <code>useId</code>. Frequently in React you need unique identifiers to associate two objects together. An example of this would be making sure a label and an input are associated together by the <code>htmlFor</code> attribute.</p>\n<p>Previously you could maintain some sort of unique counter that was tracked across renders. With concurrent React and batching in version 18 that&#39;s no longer possible. <code>useId</code> will give you a consistent via a hook so that they can always be the same.</p>\n<p>This is useful for the thing we see above: we have a label which needs a <code>for</code> attribute that corresponds to an input. We would either need to use some piece of data/parameter that we&#39;d pass into the component that would serve as the key or we can use this hook to give it a unique ID.</p>\n<p>If you need multiple IDs in the same component just do <code>{id}-name</code>, <code>{id}-address</code>, ``{id}-number<code>, etc. No need to call </code>useId` multiple times.</p>\n<p>This is safe across server-side renders and client-side.</p>\n","slug":"useid","title":"useId","section":"Hooks in Depth","icon":"search","filePath":"/home/runner/work/complete-intro-to-react-v8/complete-intro-to-react-v8/lessons/09-hooks-in-depth/F-useid.md","nextSlug":"/lessons/hooks-in-depth/others","prevSlug":"/lessons/hooks-in-depth/uselayouteffect"}},"__N_SSG":true}