{"pageProps":{"post":{"attributes":{"description":"Tailwind CSS works differently than you may expect for styling your page. Brian starts to dig into it with you."},"html":"<p>I&#39;m going to need you to suspend everything you know about CSS best practices for this section. At the start this going to feel gross and weird. But stick with me. I initially had similar feelings towards React too.</p>\n<p>We are not going to be writing <em>any</em> CSS (well, one little bit but THAT&#39;S IT.) Tailwind is all about just using tiny utility classes and then having that be all the CSS you ever need. Let&#39;s see something <em>super basic</em>.</p>\n<blockquote>\n<p>There are old class names from the previous CSS styling we had. Feel free to delete them or leave them. It doesn&#39;t matter. I haphazardly deleted them as I overwrote them with new class names.</p>\n</blockquote>\n<p>In App.jsx, put this:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// the outer div that wraps &lt;BrowserRouter&gt;</span>\n&lt;div\n  className=<span class=\"hljs-string\">&quot;p-0 m-0&quot;</span>\n  style={{\n    <span class=\"hljs-attr\">background</span>: <span class=\"hljs-string\">&quot;url(http://pets-images.dev-apis.com/pets/wallpaperA.jpg)&quot;</span>,\n  }}\n&gt;\n  […]\n&lt;/div&gt;\n</code></pre>\n<ul>\n<li>The <code>p-0</code> and <code>m-0</code> is what Tailwind is a lot of: putting a lot of tiny utility classes on HTML elements. In this case: we&#39;re making it so the encapsulating div has zero padding and zero margin. If we wanted it to have a little of either, it&#39;d <code>m-1</code> or <code>p-1</code>. There&#39;s *-1 through 12 and then there it&#39;s more a random increase with 12, 14, 16, 20, 24, 28, 32, 36, 40, etc. all the way up to 96. There&#39;s also <code>-m-1</code> for <em>negative</em> margins. There&#39;s also mt, ml, mr, mb for top, left, right, bottom and mx for left and right and my for top and bottom (these all apply to p as well.)</li>\n<li>We do have to apply the background image via styles. You&#39;ll find you&#39;ll occasionally need to do it for things that Tailwind doesn&#39;t do (like URLs) but for the most part you shouldn&#39;t need to.</li>\n</ul>\n<p>Let&#39;s do the whole header now.</p>\n<pre><code class=\"hljs language-javascript\">&lt;header className=<span class=\"hljs-string\">&quot;w-full mb-10 text-center p-7 bg-gradient-to-b from-yellow-400 via-orange-500 to-red-500&quot;</span>&gt;\n  <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;text-6xl text-white hover:text-gray-200&quot;</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">&quot;/&quot;</span>&gt;</span>\n    Adopt Me!\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span></span>\n&lt;/header&gt;\n</code></pre>\n<ul>\n<li>That&#39;s more what you&#39;ll see! Long class strings. I imagine some of you are upset looking at this. To be honest it&#39;s still strange to me. But we&#39;re also skinning a whole app with <em>zero</em> CSS so it&#39;s a pretty compelling experience.</li>\n<li>Like p and m, we have w and h. <code>w-1</code> would have a tiny width. <code>w-full</code> is width: 100%.</li>\n<li><code>bg-gradient-to-b from-yellow-400 via-orange-500 to-red-500</code> is a gradient just using classes. <code>bg-gradient-to-b</code> says it goes from the top to bottom (you can do -to-l, -to-r, or -to-t as well.) The from is the start. The via is a middle stop, and the to is the end.</li>\n<li>The yellow-400 is a yellow color and the 400 is the <em>lightness</em> of it. 50 is nearly white, 900 is as dark as the color gets.</li>\n<li>You can set your own colors via the theme but the default ones are really good.</li>\n<li><code>text-6xl</code> is a really big text size. They use the sizes sm, md, lg, xl, 2xl, etc. up to 9xl.</li>\n<li><code>text-center</code> will do <code>text-align: center</code>.</li>\n<li><code>hover:&lt;stuff&gt;</code> is how we do hover, focus, disabled, etc. It takes whatever is on the right and only applies it only when that state is true. (note: disabled doesn&#39;t work without some magic in our PostCSS 7 compat layer. We&#39;ll do that in a bit.)</li>\n<li>Note: <code>&lt;Link&gt;</code> from react-router-dom will pass styles and classes down to the resulting <code>&lt;a&gt;</code> for you.</li>\n</ul>\n<p>Let&#39;s hop over to SearchResults.jsx (we&#39;re only doing SearchParams, I&#39;ll leave it to you to fix Details)</p>\n<pre><code class=\"hljs language-javascript\">&lt;div className=<span class=\"hljs-string\">&quot;my-0 mx-auto w-11/12&quot;</span>&gt;\n  <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>\n    <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;p-10 mb-10 rounded-lg bg-gray-200 shadow-lg flex flex-col justify-center items-center&quot;</span>\n    <span class=\"hljs-attr\">onSubmit</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> {\n      e.preventDefault();\n      const formData = new FormData(e.target);\n      const obj = {\n        animal: formData.get(&quot;animal&quot;) ?? &quot;&quot;,\n        breed: formData.get(&quot;breed&quot;) ?? &quot;&quot;,\n        location: formData.get(&quot;location&quot;) ?? &quot;&quot;,\n      };\n      setRequestParams(obj);\n    }}\n  &gt;\n    […]\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span></span>\n&lt;/div&gt;\n</code></pre>\n<ul>\n<li><code>rounded-lg</code> is a &quot;large&quot; rounding of the corners i.e. border-radius.</li>\n<li><code>shadow-lg</code> is a &quot;large&quot; box shadow.</li>\n<li><code>flex</code> makes the display mode flex. <code>flex-col</code> makes it columns. <code>justify-center</code> makes it justify-content center. <code>items-center</code> makes it <code>align-items: center</code>. Net result is that you have centered horizontally and vertically items in a vertical direction.</li>\n</ul>\n","slug":"tailwind-basics","title":"Tailwind Basics","section":"TailwindCSS","icon":"wind","filePath":"/home/runner/work/complete-intro-to-react-v8/complete-intro-to-react-v8/lessons/10-tailwindcss/B-tailwind-basics.md","nextSlug":"/lessons/tailwindcss/tailwind-plugins","prevSlug":"/lessons/tailwindcss/css-and-react"}},"__N_SSG":true}